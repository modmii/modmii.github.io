<html>
<hta:application 
	id="HI"
	navigable="yes" 
	scroll="yes"
	icon="..\Support\icon.ico"
	innerborder="no"
	border="thin"
	>
	<meta charset="utf-8">
<head>
<title>ModMii</title>
<!-- VS Script cmd, not used---		CreateObject("WScript.Shell").Run "file.hta"-->
<script Language="VBScript">
    Sub Window_Onload
		window.resizeTo 1200,820
		window.moveTo (screen.width - document.body.clientwidth)/2, (screen.height - document.body.clientheight)/2
    End Sub

	Function FULLCLOSE()
		'SAVE() 'save happens on unload\close
		window.close()
	End Function

    sub Window_onUnload
        SAVE()
    end sub

	Function Page(ByVal nextgoto, nextpage)
	'nextpage is optional
		set objFSO = CreateObject("Scripting.FileSystemObject").OpenTextFile("temp\tempcheck.bat",8,true)
		objFSO.write vbNewLine & "set nextgoto=" & nextgoto
		objFSO.write vbNewLine & "set nextpage=" & nextpage
		objFSO.close
        'SAVE() 'save happens on unload\close
		window.close()
	End Function


	Function SAVE()
		set objFSO = CreateObject("Scripting.FileSystemObject").OpenTextFile("temp\tempcheck.bat",8,true)
		objFSO.write vbNewLine & "set CheatZip="
			If CheatZip.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set OSClib="
			If OSClib.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set ftpii="
			If ftpii.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set usbfolder="
			If usbfolder.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set neogamma="
			If neogamma.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set AccioHacks="
			If AccioHacks.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set usbgx="
			If usbgx.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set nintendont="
			If nintendont.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set FLOW="
			If FLOW.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set USBX="
			If USBX.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set MyM="
			If MyM.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set mmm="
			If mmm.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set CleanRip="
			If CleanRip.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set ARC="
			If ARC.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set KK="
			If KK.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set HM="
			If HM.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set DumpMii="
			If DumpMii.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set syscheck="
			If syscheck.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set yawm="
			If yawm.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Pri="
			If Pri.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set IOS236Installer="
			If IOS236Installer.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set SIP="
			If SIP.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set PLC="
			If PLC.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set OHBC="
			If OHBC.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set bootmiisd="
			If bootmiisd.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set PL="
			If PL.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Casper="
			If Casper.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set WiiMC="
			If WiiMC.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set fceugx="
			If fceugx.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set snes9xgx="
			If snes9xgx.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set vbagx="
			If vbagx.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set SGM="
			If SGM.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set WIIX="
			If WIIX.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set HBB="
			If HBB.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set WII64="
			If WII64.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Not64="
			If Not64.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set WIISX="
			If WIISX.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set locked="
			If locked.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set FLOWF="
			If FLOWF.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set S2U="
			If S2U.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set nswitch="
			If nswitch.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set BB1="
			If BB1.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set BB2="
			If BB2.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Twi="
			If Twi.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Twi2="
			If Twi2.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set YUGI="
			If YUGI.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Bathaxx="
			If Bathaxx.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set ROTJ="
			If ROTJ.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set TOS="
			If TOS.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set smash="
			If smash.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set pwns="
			If pwns.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set Wilbrand="
			If Wilbrand.checked = True Then objFSO.write "*"

		objFSO.write vbNewLine & "set vWii80Installer="
			If vWii80Installer.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set v43DB="
			If v43DB.checked = True Then objFSO.write "*"
		objFSO.write vbNewLine & "set SCR="
			If SCR.checked = True Then objFSO.write "*"
			
		objFSO.write vbNewLine & "set OHBC114="
			If OHBC114.checked = True Then objFSO.write "*"
			
		objFSO.write vbNewLine & "set OHBC113="
			If OHBC113.checked = True Then objFSO.write "*"

		objFSO.write vbNewLine & "set HMold="
			If HMold.checked = True Then objFSO.write "*"

		objFSO.write vbNewLine & "set csminstaller="
			If ci.checked = True Then objFSO.write "*"
		
		objFSO.close
	End Function

	
	Function AllButton()
		If ((OSClib.checked = True) And (HBB.checked = True) And (HM.checked = True) And (HMold.checked = True) And (OHBC.checked = True) And (Pri.checked = True) And (DumpMii.checked = True) And (syscheck.checked = True) And (yawm.checked = True) And (mmm.checked = True) And (ci.checked = True) And (MyM.checked = True) And (Casper.checked = True) And (WIIX.checked = True) And (SGM.checked = True) And (locked.checked = True) And (CleanRip.checked = True) And (ftpii.checked = True) And (usbgx.checked = True) And (USBX.checked = True) And (FLOW.checked = True) And (FLOWF.checked = True) And (usbfolder.checked = True) And (nintendont.checked = True) And (PL.checked = True) And (PLC.checked = True) And (neogamma.checked = True) And (WiiMC.checked = True) And (fceugx.checked = True) And (snes9xgx.checked = True) And (vbagx.checked = True) And (WII64.checked = True) And (Not64.checked = True) And (WIISX.checked = True) And (CheatZip.checked = True) And (AccioHacks.checked = True) And (bootmiisd.checked = True) And (ARC.checked = True) And (KK.checked = True) And (nswitch.checked = True) And (S2U.checked = True) And (IOS236Installer.checked = True) And (SIP.checked = True) And (vWii80Installer.checked = True) And (v43DB.checked = True) And (SCR.checked = True) And (OHBC113.checked = True) And (OHBC114.checked = True) And (BB1.checked = True) And (BB2.checked = True) And (Twi.checked = True) And (Twi2.checked = True) And (YUGI.checked = True) And (Bathaxx.checked = True) And (ROTJ.checked = True) And (TOS.checked = True) And (smash.checked = True) And (pwns.checked = True) And (Wilbrand.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleVwii(checkstatus)
		ToggleWii(checkstatus)
		ToggleWiiVwii(checkstatus)
		ToggleExploit(checkstatus)
		ToggleHBC(checkstatus)
	End Function
	
	
	Function vWiiButton()
		If ((vWii80Installer.checked = True) And (v43DB.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleVwii(checkstatus)
	End Function
	
	Function HBCButton()
		If ((OHBC.checked = True) And (OHBC113.checked = True) And (OHBC114.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleHBC(checkstatus)
	End Function
	
	Function WiiButton()
		If ((bootmiisd.checked = True) And (ARC.checked = True) And (KK.checked = True) And (nswitch.checked = True) And (S2U.checked = True) And (IOS236Installer.checked = True) And (SIP.checked = True) And (Casper.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleWii(checkstatus)
	End Function
	
	
	Function WiiVwiiButton()
		If ((OSClib.checked = True) And (HBB.checked = True) And (HM.checked = True) And (HMold.checked = True) And (Pri.checked = True) And (DumpMii.checked = True) And (syscheck.checked = True) And (yawm.checked = True) And (mmm.checked = True) And (ci.checked = True) And (MyM.checked = True) And (WIIX.checked = True) And (SGM.checked = True) And (locked.checked = True) And (CleanRip.checked = True) And (ftpii.checked = True) And (usbgx.checked = True) And (USBX.checked = True) And (FLOW.checked = True) And (FLOWF.checked = True) And (usbfolder.checked = True) And (nintendont.checked = True) And (PL.checked = True) And (PLC.checked = True) And (neogamma.checked = True) And (WiiMC.checked = True) And (fceugx.checked = True) And (snes9xgx.checked = True) And (vbagx.checked = True) And (WII64.checked = True) And (Not64.checked = True) And (WIISX.checked = True) And (CheatZip.checked = True) And (AccioHacks.checked = True) And (SCR.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleWiiVwii(checkstatus)
	End Function
	
	
	Function ExploitButton()
		If ((BB1.checked = True) And (BB2.checked = True) And (Twi.checked = True) And (Twi2.checked = True) And (YUGI.checked = True) And (Bathaxx.checked = True) And (ROTJ.checked = True) And (TOS.checked = True) And (smash.checked = True) And (pwns.checked = True) And (Wilbrand.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleExploit(checkstatus)
	End Function
	
	
	
	Function AutoUpdateButton()
		If ((Pri.checked = True) And (WiiMC.checked = True) And (fceugx.checked = True) And (snes9xgx.checked = True) And (vbagx.checked = True) And (SGM.checked = True) And (WIIX.checked = True) And (HBB.checked = True) And (WII64.checked = True) And (Not64.checked = True) And (WIISX.checked = True) And (usbgx.checked = True) And (nintendont.checked = True) And (FLOW.checked = True) And (OSClib.checked = True) And (MyM.checked = True)  And (yawm.checked = True)  And (syscheck.checked = True) And (ARC.checked = True) And (FTPii.checked = True) And (CleanRip.checked = True) And (vWii80Installer.checked = True) And (v43DB.checked = True) And (DumpMii.checked = True) And (ci.checked = True) And (usbfolder.checked = True) And (SCR.checked = True)) Then
			checkstatus = False
		else
			checkstatus = True
		End If
		ToggleAutoUpdate(checkstatus)
	End Function


	Function ToggleAutoUpdate(ByVal checkstatus)
		WiiMC.checked = checkstatus
		fceugx.checked = checkstatus
		snes9xgx.checked = checkstatus
		vbagx.checked = checkstatus
		SGM.checked = checkstatus
		WIIX.checked = checkstatus
		HBB.checked = checkstatus
		WII64.checked = checkstatus
		Not64.checked = checkstatus
		WIISX.checked = checkstatus
		usbgx.checked = checkstatus
		nintendont.checked = checkstatus
		FLOW.checked = checkstatus
		OSClib.checked = checkstatus
		MyM.checked = checkstatus
		yawm.checked = checkstatus
		syscheck.checked = checkstatus
		Pri.checked = checkstatus
		ARC.checked = checkstatus
		FTPii.checked = checkstatus
		CleanRip.checked = checkstatus
		vWii80Installer.checked = checkstatus
		v43DB.checked = checkstatus
		DumpMii.checked = checkstatus
		ci.checked = checkstatus
		usbfolder.checked = checkstatus
		SCR.checked = checkstatus
	End Function		

	Function ToggleVwii(ByVal checkstatus)
		vWii80Installer.checked = checkstatus
		v43DB.checked = checkstatus
	End Function
	
	Function ToggleHBC(ByVal checkstatus)
		OHBC.checked = checkstatus
		OHBC113.checked = checkstatus
		OHBC114.checked = checkstatus
	End Function

	Function ToggleWii(ByVal checkstatus)
		bootmiisd.checked = checkstatus
		ARC.checked = checkstatus
		KK.checked = checkstatus
		nswitch.checked = checkstatus
		S2U.checked = checkstatus
		IOS236Installer.checked = checkstatus
		SIP.checked = checkstatus
		Casper.checked = checkstatus
	End Function

	Function ToggleWiiVwii(ByVal checkstatus)
		OSClib.checked = checkstatus
		SCR.checked = checkstatus
		HBB.checked = checkstatus
		HM.checked = checkstatus
		HMold.checked = checkstatus
		Pri.checked = checkstatus
		DumpMii.checked = checkstatus
		syscheck.checked = checkstatus
		yawm.checked = checkstatus
		mmm.checked = checkstatus
		ci.checked = checkstatus
		MyM.checked = checkstatus
		WIIX.checked = checkstatus
		SGM.checked = checkstatus
		locked.checked = checkstatus
		CleanRip.checked = checkstatus
		ftpii.checked = checkstatus
		usbgx.checked = checkstatus
		USBX.checked = checkstatus
		FLOW.checked = checkstatus
		FLOWF.checked = checkstatus
		usbfolder.checked = checkstatus
		nintendont.checked = checkstatus
		PL.checked = checkstatus
		PLC.checked = checkstatus
		neogamma.checked = checkstatus
		WiiMC.checked = checkstatus
		fceugx.checked = checkstatus
		snes9xgx.checked = checkstatus
		vbagx.checked = checkstatus
		WII64.checked = checkstatus
		Not64.checked = checkstatus
		WIISX.checked = checkstatus
		CheatZip.checked = checkstatus
		AccioHacks.checked = checkstatus
	End Function

	Function ToggleExploit(ByVal checkstatus)
		BB1.checked = checkstatus
		BB2.checked = checkstatus
		Twi.checked = checkstatus
		Twi2.checked = checkstatus
		YUGI.checked = checkstatus
		Bathaxx.checked = checkstatus
		ROTJ.checked = checkstatus
		TOS.checked = checkstatus
		smash.checked = checkstatus
		pwns.checked = checkstatus
		Wilbrand.checked = checkstatus
	End Function

</script>
<style type="text/css">
input.bigcheck {
height: 30px;
width: 30px;
vertical-align: middle;
}
table, th {
  text-align: left;
  vertical-align: middle;
}, td {
  border:1px solid black;
  text-align: left;
  vertical-align: middle;
}
</style>
</head>
<body>
<!--<a href="https://modmii.github.io" target="_blank"><img src="https://modmii.github.io/Images/modmiibanner.png" border="0" style="width:80%;height: 100px"/></a><br>-->


<!--<button style="width:20%;position: absolute; left: 15;" onClick="vbscript:Page'HTAstuff', 'DLPAGE2.hta'"><font face="Arial Black">Page2</font></button>-->
<button title="Return to Main Menu" style="width:190; position: absolute; left: 15; top: 10;" onClick="vbscript:Page'MENU','DLPAGE2.hta'"><font face="Arial Black">Main Menu</font></button>

<button title="NUS Files" style="width:93; position: absolute; left: 15; top: 45;" onClick="vbscript:Page'DLPAGES','DLPAGE1.hta'"><font face="Arial Black">Page 1</font></button>
<!--<button disabled title="Wii & vWii Homebrew & Exploits" style="width:93; position: absolute; left: 112; top: 45;" onClick="vbscript:Page'DLPAGES','DLPAGE2.hta'"><font face="Arial Black">Page 2</font></button>-->
<button title="System Menu Themes" style="width:93; position: absolute; left: 112; top: 45;" onClick="vbscript:Page'DLPAGES','DLPAGE3.hta'"><font face="Arial Black">Page 3</font></button>
<button title="cIOSs & cMIOSs" style="width:93; position: absolute; left: 15; top: 80;" onClick="vbscript:Page'DLPAGES','DLPAGE4.hta'"><font face="Arial Black">Page 4</font></button>
<button title="WiiU Homebrew & PC Programs" style="width:93; position: absolute; left: 112; top: 80;" onClick="vbscript:Page'DLPAGES','DLPAGE5.hta'"><font face="Arial Black">Page 5</font></button>


<button title="Click to Download Files to:&#10;DLFOLDER" style="width:15%;position: absolute; right: 15; top: 10;" onClick="vbscript:FULLCLOSE()"><font face="Arial Black">Download!</font></button>
<button title="Change Current Download Folder:&#10;DLFOLDER" style="width:15%;position: absolute; right: 15; top: 45;" onClick="vbscript:Page'DRIVECHANGE','DLPAGE2.hta'"><font face="Arial Black">Download Folder</font></button>

<font size="2" face="Arial Black italic" style="position: absolute; right: 30; top: 100;" title="Hovering your mouse over various items on this page will display fun facts and helpful tips!" >(Hover over items for Tooltips)</font>

<center>
<font size="4" face="Arial Black italic"><b>Download Page 2: Wii & vWii Homebrew & Exploits</b></font>
</center>



<center>
<font size="2" color="red">WARNING: some of these files MAY CAUSE BRICK if you do NOT know what you are doing!</font><br>
<br>



<button title="Toggle All Downloads" style="width:6%" onClick="vbscript:AllButton()"><font face="Arial Black">ALL</font></button>
&nbsp;
<button title="Toggle Auto-Updating Downloads&#x21E7;&#10;Hover over each download for update details&#10;&#10;All other downloads can be updated from time to time without requiring a ModMii update" onClick="vbscript:AutoUpdateButton()"><font face="Arial Black">Auto-Updating <b>&#x21E7;</b></font></button>

</center>

<br>

<!--<table style="font-size:25px;font-family:Calibri;">-->
<table style="width:100%">


<!--Row1-->
<tr>
	<th colspan="1" title="Toggle Exploit Downloads&#10;&#10Exploits are vulnerabilities or 'backdoors' in software allowing execution of unsigned code&#10;&#10;The values in brackets indicate the System Menu version(s) supported by each exploit." style="text-align:center"><button style="width:99%;" onClick="vbscript:ExploitButton()"><font face="Arial Black">Exploits</font></button></th>
	
	<th colspan="1" title="Toggle Wii-Only Homebrew Downloads" style="text-align:center"><button style="width:99%;" onClick="vbscript:WiiButton()"><font face="Arial Black">Wii-Only Homebrew</font></button></th>
	
	<th colspan="2" title="Toggle Wii\vWii-Only Homebrew Downloads" style="text-align:center"><button style="width:99%;" onClick="vbscript:WiiVwiiButton()"><font face="Arial Black">Wii & vWii Homebrew</font></button></th>
</tr>


<!--Row2-->
<tr>
	<th title="SD Card required; SDHC and SDXC also work if on System Menu 4.0 or 4.1; can launch both dols and elfs; works on Wii only"><label><input class="bigcheck" type="checkbox" name="BB1" /> Bannerbomb v1 [3.0-4.1]</label></th>

	<th title="A bootmii folder that when saved to SD can be used to launch Bootmii; Bootmii can also be retrieved from the HackMii Installer."><label><input class="bigcheck" type="checkbox" name="bootmiisd" /> Bootmii SD Files</label></th>

	<th title="Download all 200+ Wii\vWii apps available via the Open Shop Channel: https://oscwii.org/library&#10;&#10;Apps can be excluded from this download by configuring ModMii's 'Skipped Apps' Option.&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="OSClib" /> OSC Wii App Library &#x21E7;</label></th>

	<th title="A popular USB-Loader with lots of extra features&#10;&#10;&#x21E7; Auto-Updating from oscwii.org. Note this app can also update itself."><label><input class="bigcheck" type="checkbox" name="usbgx" /> USB Loader GX &#x21E7;</label></th>
</tr>

<tr>
	<th title="SD Card required; SDHC and SDXC also work; can launch both dols and elfs; works on Wii only"><label><input class="bigcheck" type="checkbox" name="BB2" /> Bannerbomb v2 [4.2]</label></th>

	<th title="Any Region Changer (ARC) ModMii Edition is a mod of ARC for the Wii. If it detects a region mismatch, you only have to select the 'Auto Fix Settings' to correct it. It is one of many tools used to complete a region change.&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="ARC" /> ARC ModMii Edition &#x21E7;</label></th>

	<th title="Download homebrew apps using your Wii\vWii (selection is the same as the Open Shop Channel)&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="HBB" /> Homebrew Browser &#x21E7;</label></th>

	<th title="Multi Forwarder Channel WAD for Wii & vWii; forwards to GX, WiiFlow, CFG, and more! The bundled dol file can be installed to Priiloader to autoboot the channel."><label><input class="bigcheck" type="checkbox" name="USBX" /> USB-Loader Channel/dol</label></th>
</tr>

<tr>
	<th title="MailBox Bomb similar to Letterbomb; technically also works on lower firmwares (see https://wilbrand.donut.eu.org) but ModMii uses Bannerbomb for that.&#10;&#10;SD Card required; SDHC and SDXC also work if on System Menu 4.0 or higher; Can launch both dols and elfs; works on Wii only"><label><input class="bigcheck" type="checkbox" name="Wilbrand" /> Wilbrand [4.3 U\E\J\K]</label></th>

	<th title="Wii app to add or remove the Korean key from the SEEPROM. Used when region changing to\from Korean System Menu Versions.&#10;&#10;WARNING: You will 003 brick if you install the Korean Key UNLESS you are on a Korean System Menu version and\or have IOS60 installed as your System Menu IOS."><label><input class="bigcheck" type="checkbox" name="KK" /> KoreanKii</label></th>

	<th title="Used to install the Homebrew Channel v1.1.2 and BootMii 1.5"><label><input class="bigcheck" type="checkbox" name="HM" /> HackMii Installer v1.2</label></th>
	
	<th title="A popular USB-Loader known for attractive visual effects&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="FLOW" /> WiiFlow Lite &#x21E7;</label></th>
</tr>

<tr>
	<th title="Requires Super Smash Brothers Brawl disc and an SD card (SDHC and SDXC do not work); can launch elfs but not dols; works on Wii and vWii"><label><input class="bigcheck" type="checkbox" name="smash" /> Smash Stack [U\E\J\K]</label></th>
	
	<th title="Simple neek/realnand switcher app embedded in a channel (neek2o_ModMii_BK2O_nSwitch_v4.2.wad)&#10;&#10;Technically also works on vWii if neek is set up properly."><label><input class="bigcheck" type="checkbox" name="nswitch" /> nSwitch Channel</label></th>
	
	<th title="Used to install the Homebrew Channel v1.1.0 and BootMii 1.4"><label><input class="bigcheck" type="checkbox" name="HMold" /> HackMii Installer v1.0</label></th>
	
	<th title="WiiFlow forwarder channel for Wii & vWii which can be installed using a WAD Manager. The bundled dol file can be installed to Priiloader to autoboot the channel."><label><input class="bigcheck" type="checkbox" name="FLOWF" /> WiiFlow Channel/dol</label></th>
</tr>

<tr>
	<th title="Requires LEGO Batman disc, an SD card (SDHC and SDXC do not work) and a nunchuck; can launch elfs but not dols; works on Wii and vWii"><label><input class="bigcheck" type="checkbox" name="Bathaxx" /> Bathaxx [U\E\J]</label></th>
	
	<th title="An app to switch to and from UNEEK and back; download also includes a channel\WAD"><label><input class="bigcheck" type="checkbox" name="S2U" /> Switch2Uneek</label></th>

	<th title="Priiloader adds a level of brick protection to your Wii\vWii. It loads before the System Menu, can enable system menu hacks and be set to autoboot the HBC, BootMii, or whatever homebrew you want! Checking this box will also download the Load Priiloader app.&#10;&#10;&#x21E7; Auto-Updating from oscwii.org. Note Priiloader can also update itself."><label><input class="bigcheck" type="checkbox" name="Pri" /> Priiloader &#x21E7;</label></th>
	
	<th title="Configurable USB Loader is a popular USB-Loader that is highly customizable&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="usbfolder" /> CFG USB Loader &#x21E7;</label></th>
</tr>

<tr>
	<th title="Requires Tales of Symphonia: Dawn of the New World disc, an SD card (SDHC and SDXC do not work) and a nunchuck; can launch elfs but not dols; works on Wii and vWii"><label><input class="bigcheck" type="checkbox" name="TOS" /> Eri HaKawai [U\E\J]</label></th>

	<th title="A tool to run MINI apps like Bootmii or SNEEK on your Wii without having to make permanent mods to it."><label><input class="bigcheck" type="checkbox" name="Casper" /> Casper</label></th>

	<th title="An alternative tool to create a Bootmii compatible nand.bin and keys.bin backup saved to an SD Card&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="DumpMii" /> Dump Mii NAND &#x21E7;</label></th>

	<th title="Gamecube backup loader; Also works as a Gamecube plugin with other USB-Loaders&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="nintendont" /> Nintendont &#x21E7; </label></th>
</tr>

<tr>
	<th title="Requires LEGO Indiana Jones disc, an SD card (SDHC and SDXC do not work) and a nunchuck; can launch elfs but not dols; works on Wii and vWii"><label><input class="bigcheck" type="checkbox" name="pwns" /> Indiana Pwns [U\E\J]</label></th>

	<th title="Deprecated softmod tool that installs a patched IOS36 in IOS slot 236. Requires HBC version 1.0.7 or higher."><label><input class="bigcheck" type="checkbox" name="IOS236Installer" /> IOS236 Installer</label></th>

	<th title="SysCheck ModMii Edition retrieves information about what is installed on your Wii\vWii.&#10;&#10;After running this tool the output sysCheck.csv can be loaded by ModMii to check if any updates are recommended.&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="syscheck" /> SysCheck ME &#x21E7;</label></th>

	<th title="All in one alternative to the System Menu, HBC and/or USB-Loaders. Can launch Wii games, GameCube games, VC/Wiiware titles from real or emulated NAND, and can also boot fceugx, vbagx, snes9xgx, and genplusgx games."><label><input class="bigcheck" type="checkbox" name="PL" /> postLoader</label></th>
</tr>

<tr>
	<th title="Requires LEGO Star Wars disc, an SD card (SDHC and SDXC do not work) and a nunchuck; can launch elfs but not dols; works on Wii and vWii"><label><input class="bigcheck" type="checkbox" name="ROTJ" /> Return of the Jodi [U\E\J]</label></th>
	<th title="Deprecated softmod tool that can install patched IOS36, 60, 70 and 80 to various slots. Requires HBC version 1.0.7 or higher."><label><input class="bigcheck" type="checkbox" name="SIP" /> Simple IOS Patcher</label></th>
	<th title="Yet Another WAD Manager ModMii Edition allows you to (un)install WADs and launch apps. It has built in protection to prevent actions that would cause brick, the ability to install a new System Menu without losing Priiloader, and more!&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="yawm" /> YAWM ModMii Edition &#x21E7;</label></th>
	<th title="postLoader forwarder channel for Wii & vWii which can be installed using a WAD Manager"><label><input class="bigcheck" type="checkbox" name="PLC" /> postLoader Channel</label></th>
</tr>

<tr>
	<th title="Requires Yu-Gi-Oh! 5D's disc, an SD card (SDHC and SDXC do not work) and a nunchuck or classic controller; can launch elfs but not dols; works on Wii and vWii"><label><input class="bigcheck" type="checkbox" name="YUGI" /> YU-GI-OWNED [U\E\J]</label></th>
	
	<th></th>
	
	<th title="MMM is a multi-purpose tool for Wii\vWii that can install WADs, launch apps, etc, but does not support motion+ wiimotes"><label><input class="bigcheck" type="checkbox" name="mmm" /> Multi-Mod Manager</label></th>
	
	<th title="Backup Disc Loader also able to load from SD and USB"><label><input class="bigcheck" type="checkbox" name="neogamma" /> Neogamma</label></th>
</tr>

<tr>
	<th title="Version 0.1beta1 is compatible with System Menus up to 3.3, 0.1beta2 is compatible with System Menu 3.4.&#10;&#10;Requires The Legend of Zelda: Twilight Princess disc, an SD card (SDHC and SDXC do not work) and a nunchuck; can launch both dols and elfs; works on Wii only"><label><input class="bigcheck" type="checkbox" name="Twi" /> Twilight Hack 1 [<3.4 U\E\J]</label></th>

	<th colspan="1" title="Toggle vWii-Only Homebrew Downloads" style="text-align:center"><button style="width:99%;" onClick="vbscript:vWiiButton()"><font face="Arial Black">vWii-Only Homebrew</font></button></th>
	
	<th title="Easily re-install missing/removed system apps, e.g. Mii Channel, Photo Channel, etc.&#10;&#10;Technically also works on Wii Mini.&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="SCR" /> System Channel Restorer &#x21E7;</label></th>

	<th title="Wii Media Center SuperrSonic Edition&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="WiiMC" /> WiiMC-SS &#x21E7;</label></th>
</tr>

<tr>
	<th title="Version 0.1beta1 is compatible with System Menus up to 3.3, 0.1beta2 is compatible with System Menu 3.4.&#10;&#10;Requires The Legend of Zelda: Twilight Princess disc, an SD card (SDHC and SDXC do not work) and a nunchuck; can launch both dols and elfs; works on Wii only"><label><input class="bigcheck" type="checkbox" name="Twi2" /> Twilight Hack 2 [3.4 U\E\J]</label></th>
	
	<th title="Patches the WiiWare 4:3 aspect ratio database (43DB) within vWii's System Menu U8 archive to remove WiiConnect24-related channel entries (Everybody Votes Channel, Check Mii Out Channel) to enable a 16:9 aspect ratio.&#10;&#10;Redundant if any vWii theme built using ModMii has been installed (even the Default theme).&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="v43DB" /> ww-43db-patcher &#x21E7;</label></th>
	
	<th title="A Wii\vWii App that installs System Menu themes from CSM files created by ModMii, ThemeMii or MyMenu. Also supports APP files to restore original themes. Drag a mym file onto ModMii to convert it to csm.&#10;&#10;WARNING: Make sure you have Priiloader, Bootmii and NAND backup before experimenting with themes!&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="ci" /> csm-installer &#x21E7;</label></th>
	
	<th title="NES Emulator&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="fceugx" /> FCEUGX &#x21E7;</label></th>
</tr>

<tr>
	<th disabled title="Requires Mario Kart Wii disc, an SD card that has a capacity of 2GB or less, deleting savegame without being able to back it up; works on Wii only&#10;&#10;Download is not available directly via ModMii due to restrictive requirements."><label><input class="bigcheck" type="checkbox" /> <a href="https://github.com/MikeIsAStar/szsHaxx" target="_blank">szsHaxx [U\E\J\K]</a></th>

	<th title="Patched IOS80 Installer for vWii installs a patched vWii IOS80. Made redundant by the Fakesigned vIOS80[80] WAD from Download page 1.&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="vWii80Installer" /> Patched IOS80 Installer &#x21E7;</label></th>
	
	<th title="WARNING: DO NOT USE ON vWII! Use csm-installer instead.&#10;&#10;Installs System Menu themes from CSM files created by ModMii, ThemeMii or MyMenu. Also supports APP files to restore original themes. Drag a mym file onto ModMii to convert it to csm.&#10;&#10;WARNING: Make sure you have Priiloader, Bootmii and NAND backup before experimenting with themes!&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="MyM" /> MyMenuifyMod &#x21E7;</label></th>
	
	<th title="Super Nintendo Emulator&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="snes9xgx" /> SNES9xGX &#x21E7;</label></th>
</tr>

<tr>
	<th></th>
	<th></th>
	<th title="File explorer for the Wii\vWii with several other features&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="WIIX" /> WiiXplorer &#x21E7;</label></th>
	<th title="GBA/Game Boy Color/Game Boy Emulator&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="vbagx" /> Visual Boy Advance GX &#x21E7;</label></th>
</tr>

<tr>
	<th colspan="1" title="Toggle Homebrew Channel Downloads" style="text-align:center"><button style="width:99%;" onClick="vbscript:HBCButton()"><font face="Arial Black">Homebrew Channels</font></button></th>
	<th></th>
	<th title="Extract/install SaveGames and Miis from/to your Wii/vWii&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="SGM" /> SaveGame Manager GX &#x21E7;</label></th>
	<th title="N64 Emulator&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="WII64" /> Wii64 &#x21E7;</label></th>
</tr>

<tr>
	<th title="Open Homebrew Channel v1.1.3 WAD by fail0verflow with title ID OHBC. This is the same channel intalled by vWii Compat Installer v1.6. Technically it works on both Wii & vWii but is only recommended for vWii."><label><input class="bigcheck" type="checkbox" name="OHBC113" /> HBC v1.1.3 WAD [OHBC]</label></th>
	<th></th>
	<th title="A password protected apps_locked folder you can move Wii\vWii homebrew apps to restrict access to them&#10;&#10;Default Password: UDLRAB"><label><input class="bigcheck" type="checkbox" name="locked" /> Locked HBC Folder</label></th>
	<th title="N64 Emulator&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="Not64" /> Not64 &#x21E7;</label></th>
</tr>

<tr>
	<th title="Open Homebrew Channel v1.1.4-1 WAD modified by FIX94 with title ID OHBC. Technically it works on both Wii & vWii."><label><input class="bigcheck" type="checkbox" name="OHBC114" /> HBC v1.1.4-1 WAD [OHBC]</label></th>
	<th></th>
	<th title="A tool to backup your Gamecube/Wii Discs via IOS58. Create 1:1 backups of your GC/Wii discs for archival purposes without any requirements for custom IOS (cIOS). Supports USB 2.0 / NTFS / FAT32 & Front SD. Devices formatted as WBFS is not supported.&#10;&#10;Warning: ripping games to NTFS is unstable, it is highly recommended to rip games to a FAT32 formatted HDD, then transfer them to your NTFS drive using a computer.&#10;&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="CleanRip" /> CleanRip &#x21E7;</label></th>
	<th title="PS1 Emulator&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="WIISX" /> WiiSXRX &#x21E7;</label></th>
</tr>

<tr>
	<th title="Open Homebrew Channel v1.1.5 WAD with title ID LULZ; this is the same as fail0verflow's v1.1.3 but with it's Title ID changed to LULZ. Technically it works on both Wii & vWii but is only recommended for Wii."><label><input class="bigcheck" type="checkbox" name="OHBC" /> HBC v1.1.5 WAD [LULZ]</label></th>
	<th></th>
	<th title="FTP Server for the Wii\vWii; use it with FileZilla to manage files on your Wii\vWii using your PC&#10;&#x21E7; Auto-Updating from oscwii.org"><label><input class="bigcheck" type="checkbox" name="ftpii" /> ftpii &#x21E7;</label></th>
	<th title="txtcodes folder filled with cheat codes"><label><input class="bigcheck" type="checkbox" name="CheatZip" /> Cheat Codes</label></th>
</tr>

<tr>
	<th></th>
	<th></th>
	<th></th>
	<th title="Cheat Code Manager; to convert txtcodes to an AccioHacks compatible format toggle this download at the same time as 'Cheat Codes' (above), or load the ModMii Download Queue called CheatCodes_For_AccioHacks"><label><input class="bigcheck" type="checkbox" name="AccioHacks" /> AccioHacks</label></th>
</tr>


</table>


</body>
</html>
